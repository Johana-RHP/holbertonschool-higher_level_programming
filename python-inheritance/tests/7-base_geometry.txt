Importing class

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Documentation
=============
	>>> module_doc = __import__("7-base_geometry").__doc__
	>>> print(len(module_doc) > 0)
	True

	>>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__
        >>> print(len(class_doc) > 0)
        True

	>>> area_doc = __import__("7-base_geometry").BaseGeometry.area.__doc__
	>>> print(len(area_doc) > 0)
	True

	>>> integer_validator_doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
	>>> print(len(integer_validator_doc) > 0)
	True

Trying to print the area
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

Trying to pass a non-integer argument
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", "5")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 2)
	>>>

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 34)
	>>>

Testing with not integer:

	>>> bg.integer_validator("name", "Johana")
	Traceback (most recent call last):
	TypeError: name must be an integer

Testing with zero:

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

Testing with negative numbers:

	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	ValueError: distance must be greater than 0
